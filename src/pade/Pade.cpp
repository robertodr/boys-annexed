/* This file was autogenerated on 2023-04-10T15:12 DO NOT EDIT! */

#include "Pade.hpp"

#include <stdexcept>
#include <string>
#include <vector>

#include "Utilities.hpp"

namespace pade {
template <auto M, auto N>
auto
boys_function(size_t order, const std::vector<double>& xs) -> std::vector<double>
{
    switch (order)
    {
        case 0:
            return boys_function_0(xs);
        case 1:
            return cpu::boys_function<M, N, 1>(xs.data());
        case 2:
            return cpu::boys_function<M, N, 2>(xs.data());
        case 3:
            return cpu::boys_function<M, N, 3>(xs.data());
        case 4:
            return cpu::boys_function<M, N, 4>(xs.data());
        case 5:
            return cpu::boys_function<M, N, 5>(xs.data());
        case 6:
            return cpu::boys_function<M, N, 6>(xs.data());
        case 7:
            return cpu::boys_function<M, N, 7>(xs.data());
        case 8:
            return cpu::boys_function<M, N, 8>(xs.data());
        case 9:
            return cpu::boys_function<M, N, 9>(xs.data());
        case 10:
            return cpu::boys_function<M, N, 10>(xs.data());
        case 11:
            return cpu::boys_function<M, N, 11>(xs.data());
        case 12:
            return cpu::boys_function<M, N, 12>(xs.data());
        case 13:
            return cpu::boys_function<M, N, 13>(xs.data());
        case 14:
            return cpu::boys_function<M, N, 14>(xs.data());
        case 15:
            return cpu::boys_function<M, N, 15>(xs.data());
        case 16:
            return cpu::boys_function<M, N, 16>(xs.data());
        case 17:
            return cpu::boys_function<M, N, 17>(xs.data());
        case 18:
            return cpu::boys_function<M, N, 18>(xs.data());
        case 19:
            return cpu::boys_function<M, N, 19>(xs.data());
        case 20:
            return cpu::boys_function<M, N, 20>(xs.data());
        case 21:
            return cpu::boys_function<M, N, 21>(xs.data());
        case 22:
            return cpu::boys_function<M, N, 22>(xs.data());
        case 23:
            return cpu::boys_function<M, N, 23>(xs.data());
        case 24:
            return cpu::boys_function<M, N, 24>(xs.data());
        case 25:
            return cpu::boys_function<M, N, 25>(xs.data());
        case 26:
            return cpu::boys_function<M, N, 26>(xs.data());
        case 27:
            return cpu::boys_function<M, N, 27>(xs.data());
        case 28:
            return cpu::boys_function<M, N, 28>(xs.data());
        case 29:
            return cpu::boys_function<M, N, 29>(xs.data());
        case 30:
            return cpu::boys_function<M, N, 30>(xs.data());
        case 31:
            return cpu::boys_function<M, N, 31>(xs.data());
        case 32:
            return cpu::boys_function<M, N, 32>(xs.data());
        default:
            throw std::invalid_argument("Maximum supported order is 32. Requested order is " + std::to_string(order));
    }
}
}  // namespace pade

/* This file was autogenerated on 2023-04-10T16:54 DO NOT EDIT! */

#include <stdexcept>
#include <string>
#include <vector>

#include "Pade.hpp"
#include "Utilities.hpp"

namespace pade {
template <auto M, auto N>
auto
boys_function(size_t order, const std::vector<double>& xs) -> std::vector<double>
{
    switch (order)
    {
       case 0:
           return boys_function_0(xs);
       case 1:
    return cpu::boys_function<M, N, 1>(xs);
case 2:
    return cpu::boys_function<M, N, 2>(xs);
case 3:
    return cpu::boys_function<M, N, 3>(xs);
case 4:
    return cpu::boys_function<M, N, 4>(xs);
case 5:
    return cpu::boys_function<M, N, 5>(xs);
case 6:
    return cpu::boys_function<M, N, 6>(xs);
case 7:
    return cpu::boys_function<M, N, 7>(xs);
case 8:
    return cpu::boys_function<M, N, 8>(xs);
case 9:
    return cpu::boys_function<M, N, 9>(xs);
case 10:
    return cpu::boys_function<M, N, 10>(xs);
case 11:
    return cpu::boys_function<M, N, 11>(xs);
case 12:
    return cpu::boys_function<M, N, 12>(xs);
case 13:
    return cpu::boys_function<M, N, 13>(xs);
case 14:
    return cpu::boys_function<M, N, 14>(xs);
case 15:
    return cpu::boys_function<M, N, 15>(xs);
case 16:
    return cpu::boys_function<M, N, 16>(xs);
case 17:
    return cpu::boys_function<M, N, 17>(xs);
case 18:
    return cpu::boys_function<M, N, 18>(xs);
case 19:
    return cpu::boys_function<M, N, 19>(xs);
case 20:
    return cpu::boys_function<M, N, 20>(xs);
case 21:
    return cpu::boys_function<M, N, 21>(xs);
case 22:
    return cpu::boys_function<M, N, 22>(xs);
case 23:
    return cpu::boys_function<M, N, 23>(xs);
case 24:
    return cpu::boys_function<M, N, 24>(xs);
case 25:
    return cpu::boys_function<M, N, 25>(xs);
case 26:
    return cpu::boys_function<M, N, 26>(xs);
case 27:
    return cpu::boys_function<M, N, 27>(xs);
case 28:
    return cpu::boys_function<M, N, 28>(xs);
case 29:
    return cpu::boys_function<M, N, 29>(xs);
case 30:
    return cpu::boys_function<M, N, 30>(xs);
case 31:
    return cpu::boys_function<M, N, 31>(xs);
case 32:
    return cpu::boys_function<M, N, 32>(xs);
       default:
           throw std::invalid_argument("Maximum supported order is 32. Requested order is " + std::to_string(order));
    }
}
}  // namespace pade
